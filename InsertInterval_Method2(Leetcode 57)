class Interval{
    int start;
    int end;
    Interval(int start,int end){
        this.start=start;
        this.end=end;
    }
}
class Solution {
    public int[][] insert(int[][] intervals, int[] newInterval) {
        List<Interval> l=new ArrayList<>();
        int n=intervals.length;
        int i=0;
        while(i<n && intervals[i][1]<newInterval[0]){
            l.add(new Interval(intervals[i][0],intervals[i][1]));
            i++;
        }
        while(i<n && intervals[i][0]<=newInterval[1]){
            newInterval[0]=Math.min(newInterval[0],intervals[i][0]);
            newInterval[1]=Math.max(newInterval[1],intervals[i][1]);
            i++;
        }
        l.add(new Interval(newInterval[0],newInterval[1]));
        
        while(i<n){
            l.add(new Interval(intervals[i][0],intervals[i][1]));
            i++;
        }
        int[][] arr=new int[l.size()][2];
        for(int k=0;k<l.size();k++){
            arr[k][0]=l.get(k).start;
            arr[k][1]=l.get(k).end;
            
        }
        return arr;
    }
}
